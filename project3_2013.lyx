#LyX file created by tex2lyx 2.0.6
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble


\usepackage{listings}\usepackage{a4wide}\usepackage{color}\usepackage{cite}% [2,3,4] --> [2--4]
\usepackage{shadow}


\end_preamble
\options a4wide
\use_default_options false
\language english
\language_package none
\inputencoding auto
\fontencoding T1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\paperfontsize 12
\spacing single
\use_hyperref 1
\pdf_bookmarks 1
\pdf_bookmarksnumbered 0
\pdf_bookmarksopen 0
\pdf_bookmarksopenlevel 1
\pdf_breaklinks 0
\pdf_pdfborder 0
\pdf_colorlinks 0
\pdf_backref section
\pdf_pdfusetitle 1
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*

Introduction to numerical projects
\end_layout

\begin_layout Standard

Here follows a brief recipe and recommendation on how to write a report for each project. 
\end_layout

\begin_layout Itemize

Give a short description of the nature of the problem and the eventual numerical methods you have used. 
\end_layout

\begin_layout Itemize

Describe the algorithm you have used and/or developed. Here you may find it convenient to use pseudocoding. In many cases you can describe the algorithm in the program itself.
\end_layout

\begin_layout Itemize

Include the source code of your program. Comment your program properly. 
\end_layout

\begin_layout Itemize

If possible, try to find analytic solutions, or known limits in order to test your program when developing the code. 
\end_layout

\begin_layout Itemize

Include your results either in figure form or in a table. Remember to label your results. All tables and figures should have relevant captions and labels on the axes. 
\end_layout

\begin_layout Itemize

Try to evaluate the reliabilty and numerical stability/precision of your results. If possible, include a qualitative and/or quantitative discussion of the numerical stability, eventual loss of precision etc.
\end_layout

\begin_layout Itemize

Try to give an interpretation of you results in your answers to the problems. 
\end_layout

\begin_layout Itemize

Critique: if possible include your comments and reflections about the exercise, whether you felt you learnt something, ideas for improvements and other thoughts you've made when solving the exercise. We wish to keep this course at the interactive level and your comments can help us improve it. 
\end_layout

\begin_layout Itemize

Try to establish a practice where you log your work at the computerlab. You may find such a logbook very handy at later stages in your work, especially when you don't properly remember what a previous test version of your program did. Here you could also record the time spent on solving the exercise, various algorithms you may have tested or other topics which you feel worthy of mentioning. 
\end_layout

\begin_layout Section*

Format for electronic delivery of report and programs
\end_layout

\begin_layout Standard

The preferred format for the report is a PDF file. You can also use DOC or postscript formats. As programming language we prefer that you choose between C/C++, Fortran2008 or Python. The following prescription should be followed when preparing the report: 
\end_layout

\begin_layout Itemize

Use Devilry to hand in your projects, log in at 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

 http://devilry.ifi.uio.no
\end_layout

\end_inset

 with your normal UiO username and password and choose either 'fys3150' or 'fys4150'. There you can load up the files within the deadline. 
\end_layout

\begin_layout Itemize

Upload 
\series bold
only
\family default
\series default
\shape default
 the report file! For the source code file(s) you have developed please provide us with your link to your github domain. The report file should include all of your discussions and a list of the codes you have developed. Do not include library files which are available at the course homepage, unless you have made specific changes to them. 
\end_layout

\begin_layout Itemize

Comments from us on your projects, approval or not, corrections to be made etc can be found under your Devilry domain and are only visible to you and the teachers of the course.
\end_layout

\begin_layout Standard

Finally, we encourage you to work two and two together. Optimal working groups consist of 2-3 students. You can then hand in a common report.
\end_layout

\begin_layout Section*

Project 3, building a model for the solar system, deadline October 28 (noon)
\end_layout

\begin_layout Standard

The aim of this project is to develop a code for simulating the solar system. In the first part however, we will limit ourselves (in order to test our Runge-Kutta solver) to a hypothetical solar system with one planet, say Earth, which orbits around the Sun. The only force in the problem is gravity. Newton's law of gravitation is given by a force 
\begin_inset Formula $F_G$
\end_inset

 
\begin_inset Formula \[
F_G=\frac{GM_{\mathrm{sun}}M_{\mathrm{Earth}}}{r^2},
\]
\end_inset

where 
\begin_inset Formula $M_{\mathrm{sun}}$
\end_inset

 is the mass of the Sun and 
\begin_inset Formula $M_{\mathrm{Earth}}$
\end_inset

 is the mass of Earth. The gravitational constant is 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 is the distance between Earth and the Sun. We assume that the sun has a mass which is much larger than that of Earth. We can therefore safely neglect the motion of the sun in this problem. In the first part of this project, your aim is to compute the motion of the Earth using different methods for solving ordinary differential equations.
\end_layout

\begin_layout Standard

We assume that the orbit of Earth around the Sun is co-planar, and we take this to be the 
\begin_inset Formula $xy$
\end_inset

-plane. Using Newton's second law of motion we get the following equations 
\begin_inset Formula \[
\frac{d^2x}{dt^2}=\frac{F_{G,x}}{M_{\mathrm{Earth}}},
\]
\end_inset

and 
\begin_inset Formula \[
\frac{d^2y}{dt^2}=\frac{F_{G,y}}{M_{\mathrm{Earth}}},
\]
\end_inset

where 
\begin_inset Formula $F_{G,x}$
\end_inset

 and 
\begin_inset Formula $F_{G,y}$
\end_inset

 are the 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 components of the gravitational force. 
\end_layout

\begin_layout Enumerate

a) Rewrite the above second-order ordinary differential equations as a set of coupled first order differential equations. Write also these equations in terms of dimensionless variables. As an alternative to the usage of dimensionless variables, you could also use so-called astronomical units (AU as abbreviation). If you choose the latter set of units, one astronomical unit of length, known as 1 AU, is the average distance between the Sun and Earth, that is 
\begin_inset Formula $1$
\end_inset

 AU = 
\begin_inset Formula $1.5\times 10^{11}$
\end_inset

 m. It can also be convenient to use years instead of seconds since years match better the solar system. The mass of the Sun is 
\begin_inset Formula $M_{\mathrm{sun}}=M_{\odot}=2\times 10^{30}$
\end_inset

 kg. The mass of Earth is 
\begin_inset Formula $M_{\mathrm{Earth}}=6\times 10^{24}$
\end_inset

 kg. The mass of other planets like Jupiter is 
\begin_inset Formula $M_{\mathrm{Jupiter}}=1.9\times 10^{27}$
\end_inset

 kg and its distance to the Sun is 5.20 AU. Similar numbers for Mars are 
\begin_inset Formula $M_{\mathrm{Mars}}=6.6\times 10^{23}$
\end_inset

 kg and 1.52 AU, for Venus 
\begin_inset Formula $M_{\mathrm{Venus}}=4.9\times 10^{24}$
\end_inset

 kg and 0.72 AU, for Saturn are 
\begin_inset Formula $M_{\mathrm{Saturn}}=5.5\times 10^{26}$
\end_inset

 kg and 9.54 AU, for Mercury are 
\begin_inset Formula $M_{\mathrm{Mercury}}=2.4\times 10^{23}$
\end_inset

 kg and 0.39 AU, for Uranus are 
\begin_inset Formula $M_{\mathrm{Uranus}}=8.8\times 10^{25}$
\end_inset

 kg and 19.19 AU, for Neptun are 
\begin_inset Formula $M_{\mathrm{Neptun}}=1.03\times 10^{26}$
\end_inset

 kg and 30.06 AU and for Pluto are 
\begin_inset Formula $M_{\mathrm{Pluto}}=1.31\times 10^{22}$
\end_inset

 kg and 39.53 AU. Pluto is no longer considered a planet, but we add it here for historical reasons.
\end_layout

\begin_deeper
\begin_layout Standard

Finally, mass units can be obtained by using the fact that Earth's orbit is almost circular around the Sun. For circular motion we know that the force must obey the following relation 
\begin_inset Formula \[
F_G= \frac{M_{\mathrm{Earth}}v^2}{r}=\frac{GM_{\odot}M_{\mathrm{Earth}}}{r^2},
\]
\end_inset

where 
\begin_inset Formula $v$
\end_inset

 is the velocity of Earth. The latter equation can be used to show that 
\begin_inset Formula \[
v^2r=GM_{\odot}=4\pi^2\mathrm{AU}^3/\mathrm{yr}^2.
\]
\end_inset

Discretize the above differential equations and set up an algorithm for solving these equations using the so-called Runge-Kutta 4 (RK4 hereafter) method discussed in the lecture notes, chapter 8. 
\end_layout

\end_deeper
\begin_layout Enumerate

b) Write then a program which solves the above differential equations for the Earth-Sun system using the RK4 method. Your code should now be object-oriented. Try to figure out which parts and operations could be written as classes and generalized (hint: one possibility is to write a class which returns the distance between the various objects. Or, you could write a planet class which contains relevant data about different planets). Your task here is to think of the program flow and figure out which parts can be abstracted and reused for many types of operations. 
\end_layout

\begin_layout Enumerate

c) Find out which initial value for the velocity that gives a circular orbit and test the stability of your algorithm as function of different time steps 
\begin_inset Formula $\Delta t$
\end_inset

. Make a plot of the results you obtain for the position of Earth (plot the 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 values) orbiting the Sun.
\end_layout

\begin_deeper
\begin_layout Standard

Check also for the case of a circular orbit that both the kinetic and the potential energies are constants. Check also that the angular momentum is a constant. Explain why these quantities are conserved.
\end_layout

\end_deeper
\begin_layout Enumerate

d) Consider then a planet which begins at a distance of 1 AU from the sun. Find out by trial and error what the initial velocity must be in order for the planet to escape from the sun. Can you find an exact answer?
\end_layout

\begin_layout Enumerate

e) We will now study the three-body problem, still with the Sun kept fixed at the center but including Jupiter (the most massive planet in the solar system, having a mass that is approximately 1000 times smaller than that of the Sun) together with Earth. This leads us to a three-body problem. Without Jupiter, Earth's motion is stable and unchanging with time. The aim here is to find out how much Jupiter alters Earth's motion.
\end_layout

\begin_deeper
\begin_layout Standard

The program you have developed can easily be modified by simply adding the magnitude of the force betweem Earth and Jupiter.
\end_layout

\begin_layout Standard

This force is given again by 
\begin_inset Formula \[
F_{\mathrm{Earth-Jupiter}}=\frac{GM_{\mathrm{Jupiter}}M_{\mathrm{Earth}}}{r_{\mathrm{Earth-Jupiter}}^2},
\]
\end_inset

where 
\begin_inset Formula $M_{\mathrm{Jupiter}}$
\end_inset

 is the mass of the sun and 
\begin_inset Formula $M_{\mathrm{Earth}}$
\end_inset

 is the mass of Earth. The gravitational constant is 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $r_{\mathrm{Earth-Jupiter}}$
\end_inset

 is the distance between Earth and Jupiter.
\end_layout

\begin_layout Standard

We assume again that the orbits of the two planets are co-planar, and we take this to be the 
\begin_inset Formula $xy$
\end_inset

-plane. Modify your first-order differential equations in order to accomodate both the motion of Earth and Jupiter by taking into account the distance in 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 between Earth and Jupiter. Set up the algorithm and plot the positions of Earth and Jupiter using the fourth-order Runge-Kutta method. Discuss the stability of the solutions using your RK4 solver.
\end_layout

\begin_layout Standard

Repeat the calculations by increasing the mass of Jupiter by a factor of 10 and 1000 and plot the position of Earth. Study again the stability of the RK4 solver.
\end_layout

\end_deeper
\begin_layout Enumerate

f) Finally, using our RK4 solver, we carry out a real three-body calculation where all three systems, Earth, Jupiter and the Sun are in motion. To do this, choose the center-of-mass position of the three-body system as the origin rather than the position of the sun. Give the sun an initial velocity which makes the total momentum of the system exactly zero (the center-of-mass will remain fixed). Compare these results with those from the previous exercise and comment your results. Extend your program to include all planets in the solar system (if you have time, you can also include the various moons, but it is not required) and discuss your results. Try to find data for the initial positions and velocities for all planets.
\end_layout

\begin_layout Enumerate

g) The perihelion precession of Mercury. This part is optional (frivillig)!
\end_layout

\begin_deeper
\begin_layout Standard

An important test of the general theory of relativity was to compare its prediction for the perihelion precession of Mercury to the observed value. The observed value of the perihelion precession, when all classical effects (such as the perturbation of the orbit due to gravitational attraction from the other planets) are subtracted, is 
\begin_inset Formula $43''$
\end_inset

 (
\begin_inset Formula $43$
\end_inset

 arc seconds) per century.
\end_layout

\begin_layout Standard

Closed elliptical orbits are a special feature of the Newtonian 
\begin_inset Formula $1/r^2$
\end_inset

 force. In general, any correction to the pure 
\begin_inset Formula $1/r^2$
\end_inset

 behaviour will lead to an orbit which is not closed, i.e. after one complete orbit around the Sun, the planet will not be at exactly the same position as it started. If the correction is small, then each orbit around the Sun will be almost the same as the classical ellipse, and the orbit can be thought of as an ellipse whose orientation in space slowly rotates. In other words, the perihelion of the ellipse slowly precesses around the Sun.
\end_layout

\begin_layout Standard

You will now study the orbit of Mercury around the Sun, adding a general relativistic correction to the Newtonian gravitational force, so that the force becomes 
\begin_inset Formula \[
F_G = \frac{GM_\mathrm{Sun}M_\mathrm{Mercury}}{r^2}\left[1 + \frac{3l^2}{r^2c^2}\right]
\]
\end_inset

where 
\begin_inset Formula $M_\mathrm{Mercury}$
\end_inset

 is the mass of Mercury, 
\begin_inset Formula $r$
\end_inset

 is the distance between Mercury and the Sun, 
\begin_inset Formula $l=|\vec{r}\times\vec{v}|$
\end_inset

 is the magnitude of Mercury's orbital angular momentum per unit mass, and 
\begin_inset Formula $c$
\end_inset

 is the speed of light in vacuum. Run a simulation over one century of Mercury's orbit around the Sun with no other planets present, starting with Mercury at perihelion on the 
\begin_inset Formula $x$
\end_inset

 axis. Check then the value of the perihelion angle 
\begin_inset Formula $\theta_\mathrm{p}$
\end_inset

, using 
\begin_inset Formula \[
\tan \theta_\mathrm{p} = \frac{y_\mathrm{p}}{x_\mathrm{p}}
\]
\end_inset

where 
\begin_inset Formula $x_\mathrm{p}$
\end_inset

 (
\begin_inset Formula $y_\mathrm{p}$
\end_inset

) is the 
\begin_inset Formula $x$
\end_inset

 (
\begin_inset Formula $y$
\end_inset

) position of Mercury at perihelion, i.e. at the point where Mercury is at its closest to the Sun. You may use that the speed of Mercury at perihelion is 
\begin_inset Formula $12.44\,\mathrm{AU}/\mathrm{yr}$
\end_inset

, and that the distance to the Sun at perihelion is 
\begin_inset Formula $0.3075\,\mathrm{AU}$
\end_inset

. You need to make sure that the time resolution used in your simulation is sufficient, for example by checking that the perihelion precession you get with a pure Newtonian force is at least a few orders of magnitude smaller than the observed perihelion precession of Mercury. Can the observed perihelion precession of Mercury be explained by the general theory of relativity? 
\end_layout

\end_deeper
\end_body
\end_document
